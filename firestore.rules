rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    match /members/{memberId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /gallery/{itemId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /donations/{donationId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == resource.data.user_id || isAdmin());
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    match /announcements/{announcementId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /site_settings/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /audit_logs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
